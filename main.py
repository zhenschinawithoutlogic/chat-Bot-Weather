import requests  
import datetime  
import asyncio  # –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ–º.
from config import open_weather_token, tg_bot_token 
from aiogram import Bot, Dispatcher  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram-–±–æ—Ç–æ–º.
from aiogram.types import Message  # –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
from aiogram.filters import Command  # –§–∏–ª—å—Ç—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ 


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ 
bot = Bot(token=tg_bot_token)  # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞, –ø–µ—Ä–µ–¥–∞–≤–∞—è —Ç–æ–∫–µ–Ω –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
dp = Dispatcher()  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π


@dp.message(Command("start"))  #  —Å–≤—è–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –∫–æ–º–∞–Ω–¥–æ–π start
async def cmd_start(message: Message):  #  —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.
    user_first_name = message.from_user.first_name  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 
    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {user_first_name}! –ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –∞ —è —Å–∫–∞–∂—É –ø–æ–≥–æ–¥—É!')  

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
@dp.message()  #—Å–≤—è–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
async def get_weather(message: Message):  # —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã.
    city = message.text  
    try:
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API OpenWeather
        r = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={open_weather_token}&units=metric&lang=ru"
        )
        r.raise_for_status()  
        data = r.json()  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç API –≤ JSON-—Ñ–æ—Ä–º–∞—Ç.

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ 
        city_name = data["name"] 
        cur_weather = data["main"]["temp"]  
        humidity = data["main"]["humidity"] 
        pressure = data["main"]["pressure"]  
        wind = data["wind"]["speed"]  
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"]).strftime('%H:%M:%S')

       
        await message.reply(
            f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city_name}\n"
            f"üå°–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°: {cur_weather}¬∞C\n"
            f"üåß–í–ª–∞–∂–Ω–æ—Å—Ç—åüåß: {humidity}%\n"
            f"‚òÇÔ∏è–î–∞–≤–ª–µ–Ω–∏e‚òÇÔ∏è: {pressure} –º–º.—Ä—Ç.—Å—Ç.\n"
            f"üå™–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞üå™: {wind} –º/—Å\n"
            f"‚òÄÔ∏è–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞‚òÄÔ∏è: {sunrise_timestamp}\n"
            f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!"
        )
    except requests.exceptions.HTTPError as http_err:  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        await message.reply(f"–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!") 
    except KeyError as key_err:  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –æ—Ç–≤–µ—Ç–µ API
        await message.reply(f"–û—à–∏–±–∫–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!")  
    except Exception as ex:  # –õ–æ–≤–∏–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {ex}")  

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():  
    print("–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω")  
    await dp.start_polling(bot)  

  
if __name__ == "__main__":  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
    try:
        asyncio.run(main()) 
    except KeyboardInterrupt:  
        print('–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω')  





















